name: Build & Release

on:
  workflow_dispatch:
  push:
    branches:
      - development
    paths:
      - 'main/**'
      - 'renderer/**'
      - 'bin/**'
      - 'electron-builder.json'

jobs:
  publish:
    name: Release Windows/Linux App
    runs-on: ${{ matrix.os }}   # operating systems

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-2022, macos-12]  # runs on macos/ubuntu/windows

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14.17.6

      - name: Prepare environment (ubuntu)
        if: matrix.os == 'ubuntu-20.04'
        run: sudo apt update && sudo apt upgrade && sudo apt install build-essential

      - name: Cache node_modules
        id: cache-desktop-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('package-lock.json', 'patches/**') }}

      - name: Install NPM Dependencies
        if: steps.cache-desktop-modules.outputs.cache-hit != 'true'
        run: npm install --force

      - name: Publish DMG/Zip (mac)
        if: matrix.os == 'macos-12'
        env:
          GH_TOKEN: ${{secrets.GH_TOKEN}}
          CI: false
        run:  npm run publish:mac

      - name: Publish DEB/AppImage (ubuntu)
        if: matrix.os == 'ubuntu-20.04'
        env:
          GH_TOKEN: ${{secrets.GH_TOKEN}}
          CI: false
        run:  npm run publish:linux

      - name: Publish EXE/Zip (windows)
        if: matrix.os == 'windows-latest'
        env:
          GH_TOKEN: ${{secrets.GH_TOKEN}}
          CI: false
        run:  npm run publish:win
