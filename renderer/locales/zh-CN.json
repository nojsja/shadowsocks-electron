{
  "customize_plugin": "自定义插件[NO SIP003]",
  "customize_plugin_tips": "定制插件的执行文件路径和执行参数，默认执行文件路径为客户端插件目录",
  "customize_plugin_sip003": "自定义插件[SIP003]",
  "customize_plugin_tips_sip003": "定制符合SIP003规范的插件执行文件路径和执行参数，默认执行文件路径为客户端插件目录",
  "customize_user_rules": "定制用户规则",
  "customize_global_rules": "定制全局规则",
  "release_notes": "更新日志",
  "plugin_path": "插件路径",
  "traffic": "流量",
  "enable_load_balance": "开启负载均衡",
  "disable_load_balance": "关闭负载均衡",
  "failed_to_enable_load_balance": "开启负载均衡失败",
  "successfully_enabled_load_balance": "开启负载均衡成功",
  "nodes_count_limit": "并发节点数限制",
  "load_balance_strategy": "负载均衡策略",
  "polling": "轮询",
  "random": "随机",
  "polling_tips": "轮流选择服务节点发送请求",
  "random_tips": "随机选择服务节点发送请求",
  "only_for_server_groups": "仅对订阅服务器组有效，在服务器列表右键点击订阅服务器组可弹出功能菜单",
  "invalid_value": "非法值",
  "readme": "请查看 Github 页面中的 - 插件安装说明",
  "readme_acl": "修改 ACL (Access Control List) 配置后回到主页时会自动重启相关服务，请查看 Github 页面中的相关说明 (注意：该功能不适用于 SSR 服务器)",
  "please_confirm_v2ray-plugin_installed_on_your_system": "v2ray-plugin 插件已经内置，可以直接使用。如果想使用外部 v2ray-plugin 插件文件可以将其放入客户端插件目录，或者使用命令 [ln -s] 建立软链接到插件目录也可以。",
  "please_confirm_kcptun_installed_on_your_system": "需要先安装 kcptun，请在 github readme 页面查看更多信息。插件下载后放到 `插件目录`，需要重命名为 kcptun。Linux/Mac 用户记得使用 [chmod] 命令授予可执行权限。",
  "not_applicable_to_linux_snap_application": "linux snap 版本暂未支持",
  "failed_to_download_file": "文件下载失败",
  "successful_operation": "操作成功",
  "failed_operation": "操作失败",
  "recover_pac_file_with_link": "使用填入的 GFWList 链接重新生成 PAC 文件",
  "recover_pac_file_with_file": "使用本地 GFWList 文件重新生成 PAC 文件",
  "fixed_menu": "固定菜单",
  "auto_hide": "静默启动",
  "minimize_on_start": "最小化窗口启动",
  "top": "置顶",
  "server_url_not_set": "服务器地址未设置，请尝试删除订阅后重新添加",
  "server_group_added": "已添加服务器组",
  "server_group_updated": "已更新服务器组",
  "fail_to_parse_server_group": "解析服务器组失败",
  "subscription_updated": "订阅已更新",
  "failed_to_update_subscription": "订阅更新失败",
  "update": "更新",
  "move_up": "上移",
  "move_down": "下移",
  "obfs": "混淆 (obfs)",
  "obfsParam":"混淆参数",
  "protocol": "协议 (protocol)",
  "protocolParam":"协议参数",
  "server_type": "服务器类型",
  "delay": "延迟",
  "delay_test": "测试延迟",
  "loading": "加载中",
  "connected": "已连接",
  "connect": "连接",
  "disconnect": "断开连接",
  "pac": "PAC",
  "global": "全局",
  "manual": "手动",
  "home": "主页",
  "settings": "设置",
  "about": "关于",
  "local_port": "本地端口",
  "local_port_tips": "socks 服务监听端口",
  "pac_port": "PAC 服务端口",
  "pac_port_tips": "用来托管 PAC 文件的静态服务",
  "http_proxy": "http 代理",
  "https_proxy": "https 代理",
  "http_proxy_port": "代理端口",
  "restart_when_changed": "修改后回到主页时会自动重启相关服务",
  "restart_pac_tips": "修改后回到主页时会自动重启PAC服务，某些浏览器需要手动重启后PAC规则才能生效",
  "customize_global_pac_tips": "使用 'GFWList URL' 重新生成 PAC 文件时会导致全局规则被覆盖，建议优先尝试定制用户规则",
  "https_proxy_port": "https 代理端口",
  "the_same_port_is_not_allowed": "端口号冲突",
  "gfwlist_url": "GFWList 链接",
  "gfwlist_url_tips": "用来生成 PAC 文件的源文件",
  "launch_on_boot": "开机自启",
  "debugging": "调试",
  "basic_settings": "基础设置",
  "experimental": "实验特性",
  "proxy_settings": "代理设置",
  "load_balance": "负载均衡",
  "unstable_feature": "不稳定功能",
  "load_balance_tips": "客户端会尝试同时连接多个服务器节点，并将流量压力分散到各个服务器",
  "open_log_dir": "打开日志目录",
  "open_plugins_dir": "打开插件目录",
  "plugins_dir_tips": "外部插件 (如 v2ray-plugin/kcptun) 应该放在此目录中。",
  "open_process_manager": "打开进程管理器",
  "reset_data": "重置数据",
  "offline": "离线",
  "online": "在线",
  "ok": "确定",
  "cancel": "取消",
  "add_server": "添加服务器",
  "share": "分享",
  "copy_link": "复制链接",
  "download": "下载",
  "scan_qt_code_from_screen": "从屏幕扫描二维码",
  "import_server_url_from_clipboard": "从剪贴板导入配置",
  "import_server_subscription_from_clipboard": "从剪贴板解析订阅链接",
  "import_server_url_from_clipboard_tips": "以 ss(r):// 开头的文本。",
  "import_server_subscription_from_clipboard_tips": "HTTP(S) 开头的链接，用于下载由多个 ss(r) 配置数据，下载后客户端会进行解析并导入所有服务器。已测试支持的服务商：泡芙云、monocloud(节点信息不全)、速蛙云(已跑路)...",
  "add_server_manually": "手动添加",
  "remark": "名称",
  "server_address": "服务器地址",
  "server_port": "端口号",
  "password": "密码",
  "encryption": "加密方式",
  "timeout": "超时时间",
  "plugin": "插件",
  "none": "无",
  "plugin_options": "插件参数",
  "cannot_remove_selected_server": "不能删除选中的服务器",
  "removed_a_server": "已删除服务器",
  "added_a_server": "已添加服务器",
  "added_a_subscription_server_group": "已添加订阅服务器组",
  "edited_a_server": "已编辑服务器",
  "remove_this_server?": "删除这个服务器？",
  "this_action_cannot_be_undone": "此操作不能恢复，请谨慎操作！",
  "copied": "已复制",
  "copy": "复制",
  "edit_server": "编辑服务器",
  "edit": "编辑",
  "delete": "删除",
  "darkMode": "暗色模式",
  "autoTheme": "主题同步",
  "autoThemeTips": "主题和系统保持一致",
  "save": "保存",
  "language": "语言",
  "invalid_operation": "操作无效",
  "invalid_parameter": "参数无效",
  "no_qr_code_is_detected": "未检测到二维码",
  "restore": "恢复",
  "backup": "备份",
  "warning": "警告",
  "the_recovery_is_successful": "成功恢复！",
  "the_recovery_is_failed": "恢复失败! 请检查目标文件是否为 JSON 格式",
  "user_canceled": "用户取消操作",
  "invalid_server_address": "服务器地址不合法",
  "invalid_server_port": "服务器端口不合法",
  "invalid_port": "端口号不合法",
  "invalid_port_range": "端口号范围不合法：(1024 - 65535]",
  "count_range_2_5": "数量范围：[2 - 5]",
  "invalid_password": "密码不合法",
  "invalid_timeout": "超时时间不合法",
  "reset_all_data": "重置所有数据？",
  "reset_all_data_tips": "此操作会将所有数据置为默认值。",
  "cleared_all_data": "已清除所有数据",
  "the_local_port_is_occupied": "本地端口被占用！",
  "verbose_output": "记录完整的访问日志",
  "acl_settings": "ACL 设置",
  "acl_content": "ACL 文件地址",
  "click_to_edit": "点击编辑",
  "select": "选择",
  "langEnglish": "English",
  "langZhong": "中文",
  "langRussian": "Русский",
  "workflow": "工作流",
  "add_workflow_task": "添加工作流任务",
  "remove_workflow": "删除工作流",
  "run_workflow": "运行工作流",
  "stop_workflow": "中止工作流",
  "no_tasks": "无任务",
  "timer": "定时器",
  "disabled": "已禁用",
  "enabled": "已启用",
  "open_with_code_editor": "用代码编辑器打开",
  "save_editor_content_tips": "保存修改，相当于快捷键 'ctrl/cmd + s'。",
  "load_template_code": "加载模板代码",
  "workflow_timed_execution_rule_updated": "定时执行规则已更新",
  "set_timed_execution_rule": "设置定时执行规则",
  "sure_to_delete_task_tips": "确定要删除这个任务吗？",
  "sure_to_delete_runner_tips": "确定要删除这个工作流吗？所有相关脚本代码都将丢失。",
  "fail_to_get_workflow_list": "获取工作流列表失败",
  "fail_to_get_workflow_detail": "获取工作流详情失败",
  "fail_to_create_workflow": "创建工作流失败",
  "fail_to_remove_workflow": "删除工作流失败",
  "fail_to_run_workflow": "执行工作流失败",
  "fail_to_stop_workflow": "中止工作流失败",
  "fail_to_enable_workflow": "启用工作流失败",
  "fail_to_disable_workflow": "禁用工作流失败",
  "fail_to_create_workflow_task": "创建工作流任务失败",
  "fail_to_remove_workflow_task": "删除工作流任务失败",
  "fail_to_load_workflow_demo_script": "加载工作流示例脚本失败",
  "workflow_task_text_00_01": "工作流是一组以特定顺序执行的任务，您可以通过向其添加异步或同步任务来创建工作流。有一些不同的任务类型：源任务、处理器任务、附加效果任务。",
  "workflow_task_text_00_02": "工作流功能使创建复杂的任务流程变得更加容易。在我的一个案例中，使用了工作流来从互联网上抓取免费的 SSR/SS 服务器节点。",
  "workflow_task_text_00_03": "另一个例子是通过定时计划实现订阅自动更新，就像 unix 的 crontab 任务一样，当然也遵循相同的 crontab 语法(* */1 * * *)。",
  "workflow_task_text_00_04": "如果您不知道如何创建任务脚本，请尝试 <b>加载模板代码</b> 按钮为每个任务加载一个简单的示例。",
  "workflow_task_text_01_01_title": "1. Source 源任务",
  "workflow_task_text_01_01_block_01": "对于源类型任务，一般用于生成数据源，然后将数据传递给下一个任务处理器。它有三个子类型：Puppeteer、Crawler、Node。",
  "workflow_task_text_01_01_01_title": "1.1 Puppeteer 源任务",
  "workflow_task_text_01_01_01_01": "用于在 web 上执行自动化任务的无头浏览器，它支持无 UI 界面的编程控制。",
  "workflow_task_text_01_01_01_02": "当你发现 Crawler 爬虫源任务很难实现某些功能时，记得试试 Puppeteer 无头浏览器任务。",
  "workflow_task_text_01_01_02_title": "1.2 Crawler 源任务",
  "workflow_task_text_01_01_02_01": "Node.js 上最强大、流行的 web 爬虫工具。",
  "workflow_task_text_01_01_03_title": "1.3 Node 源任务",
  "workflow_task_text_01_01_03_01": "Node 类型任务是 nodejs 原生模块(同样适用于所有其他任务)支持的通用任务，可以使用它来执行任何 Nodejs 脚本，例如读/写文件系统和发送 http 请求获取远程数据。",
  "workflow_task_text_01_02_title": "2. Processor 处理器任务",
  "workflow_task_text_01_02_block_01": "对于处理器类型的任务，扮演着任务之间的中间件的角色。它通常用于处理来自前一个任务的数据，并将处理后的数据传递给下一个任务处理程序。",
  "workflow_task_text_01_03_title": "3. Effect 附加效果任务",
  "workflow_task_text_01_03_block_01": "对于附加效果型任务，一般用于产生副作用，如通知、订阅更新、订阅添加、服务器添加、服务器断开、服务器重连等。",
  "workflow_task_text_01_03_block_02": "所有这些功能都是由客户端内部 API 服务(IPC)提供的，之后会有更多的 API 支持。"
}
